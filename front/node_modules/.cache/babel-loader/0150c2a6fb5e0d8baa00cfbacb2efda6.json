{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gmore/Sites/blablabla/src/components/Recording.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport identicon from 'identicon';\n\nconst Recording = ({\n  recording\n}) => {\n  _s();\n\n  // ðŸ›  Should move to a useVotes hook to manage votes incoming from recordings.\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n\n  const vote = () => {\n    const totalVotes = hasVoted ? upVotes - 1 : upVotes + 1;\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  };\n\n  identicon.generate({\n    id: 'ajido',\n    size: 150\n  }, (_, buffer) => {\n    // if (err) throw err\n    const img = new Image();\n    img.src = buffer;\n    document.getElementById('identicon').appendChild(img);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"identicon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: recording,\n        controls: true\n      }, recording, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: vote,\n      children: [`${upVotes} `, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: [\"far\", \"thumbs-up\"],\n        color: `${hasVoted ? 'green' : 'red'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recording, \"lCrWrv3n5aVgJVC1sCfqrVJei+U=\");\n\n_c = Recording;\nRecording.propTypes = {\n  recording: PropTypes.string\n};\nexport default Recording;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recording\");","map":{"version":3,"sources":["/Users/gmore/Sites/blablabla/src/components/Recording.js"],"names":["React","useState","PropTypes","FontAwesomeIcon","identicon","Recording","recording","hasVoted","setHasVoted","upVotes","setUpVotes","vote","totalVotes","generate","id","size","_","buffer","img","Image","src","document","getElementById","appendChild","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMU,IAAI,GAAG,MAAM;AACjB,UAAMC,UAAU,GAAGL,QAAQ,GACvBE,OAAO,GAAG,CADa,GAEvBA,OAAO,GAAG,CAFd;AAIAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,UAAU,CAACE,UAAD,CAAV;AACD,GAPD;;AASAR,EAAAA,SAAS,CAACS,QAAV,CAAmB;AACjBC,IAAAA,EAAE,EAAE,OADa;AAEjBC,IAAAA,IAAI,EAAE;AAFW,GAAnB,EAGG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAChB;AACA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAUH,MAAV;AACAI,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,WAArC,CAAiDL,GAAjD;AACD,GARD;AAUA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAEZ,SAAZ;AAAuC,QAAA,QAAQ;AAA/C,SAA4BA,SAA5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,OAAO,EAAEK,IAAjB;AAAA,iBACI,GAAEF,OAAQ,GADd,eAEE,QAAC,eAAD;AACE,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,WAAR,CADR;AAEE,QAAA,KAAK,EAAG,GAAEF,QAAQ,GAAG,OAAH,GAAa,KAAM;AAFvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxCD;;GAAMF,S;;KAAAA,S;AA0CNA,SAAS,CAACmB,SAAV,GAAsB;AACpBlB,EAAAA,SAAS,EAAEJ,SAAS,CAACuB;AADD,CAAtB;AAIA,eAAepB,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport identicon from 'identicon';\n\nconst Recording = ({ recording }) => {\n  // ðŸ›  Should move to a useVotes hook to manage votes incoming from recordings.\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n\n  const vote = () => {\n    const totalVotes = hasVoted\n      ? upVotes - 1\n      : upVotes + 1;\n\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  };\n\n  identicon.generate({\n    id: 'ajido',\n    size: 150\n  }, (_, buffer) => {\n    // if (err) throw err\n    const img = new Image()\n    img.src = buffer\n    document.getElementById('identicon').appendChild(img)\n  });\n\n  return (\n    <div>\n      <div>\n        <img id=\"identicon\" />\n        <audio src={recording} key={recording} controls />\n      </div>\n      {/* <button>Reply</button> */}\n      <button onClick={vote}>\n        {`${upVotes} `}\n        <FontAwesomeIcon\n          icon={[\"far\", \"thumbs-up\"]}\n          color={`${hasVoted ? 'green' : 'red'}`}\n        />\n      </button>\n    </div>\n  )\n};\n\nRecording.propTypes = {\n  recording: PropTypes.string\n};\n\nexport default Recording;\n"]},"metadata":{},"sourceType":"module"}