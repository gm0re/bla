{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gmore/Sites/blablabla/src/components/Recording.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport identicon from 'identicon';\nimport uniqid from 'uniqid';\n\nconst Recording = ({\n  recording\n}) => {\n  _s();\n\n  // ðŸ›  Should move to a useVotes hook to manage votes incoming from recordings.\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n  const [avatar, setAvatar] = useState();\n\n  const vote = () => {\n    const totalVotes = hasVoted ? upVotes - 1 : upVotes + 1;\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  };\n\n  const avatarId = uniqid();\n  useEffect(() => {\n    identicon.generate({\n      id: avatarId,\n      size: 150\n    }, (_, buffer) => {\n      // if (err) throw err\n      setAvatar(buffer);\n      console.log('avatar', avatar);\n      return avatar;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: recording,\n        controls: true\n      }, recording, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: vote,\n      children: [`${upVotes} `, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: [\"far\", \"thumbs-up\"],\n        color: `${hasVoted ? 'green' : 'red'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recording, \"fDGGSYoZy6A/e72Dxt6VXx4UEfk=\");\n\n_c = Recording;\nRecording.propTypes = {\n  recording: PropTypes.string\n};\nexport default Recording;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recording\");","map":{"version":3,"sources":["/Users/gmore/Sites/blablabla/src/components/Recording.js"],"names":["React","useState","useEffect","PropTypes","FontAwesomeIcon","identicon","uniqid","Recording","recording","hasVoted","setHasVoted","upVotes","setUpVotes","avatar","setAvatar","vote","totalVotes","avatarId","generate","id","size","_","buffer","console","log","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;;AAEA,QAAMc,IAAI,GAAG,MAAM;AACjB,UAAMC,UAAU,GAAGP,QAAQ,GACvBE,OAAO,GAAG,CADa,GAEvBA,OAAO,GAAG,CAFd;AAIAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,UAAU,CAACI,UAAD,CAAV;AACD,GAPD;;AASA,QAAMC,QAAQ,GAAGX,MAAM,EAAvB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,CAACa,QAAV,CAAmB;AACjBC,MAAAA,EAAE,EAAEF,QADa;AAEjBG,MAAAA,IAAI,EAAE;AAFW,KAAnB,EAGG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAChB;AACAR,MAAAA,SAAS,CAACQ,MAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,MAAtB;AACA,aAAOA,MAAP;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAEL,SAAZ;AAAuC,QAAA,QAAQ;AAA/C,SAA4BA,SAA5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,OAAO,EAAEO,IAAjB;AAAA,iBACI,GAAEJ,OAAQ,GADd,eAEE,QAAC,eAAD;AACE,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,WAAR,CADR;AAEE,QAAA,KAAK,EAAG,GAAEF,QAAQ,GAAG,OAAH,GAAa,KAAM;AAFvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;GAAMF,S;;KAAAA,S;AA+CNA,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,SAAS,EAAEL,SAAS,CAACuB;AADD,CAAtB;AAIA,eAAenB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport identicon from 'identicon';\nimport uniqid from 'uniqid';\n\nconst Recording = ({ recording }) => {\n  // ðŸ›  Should move to a useVotes hook to manage votes incoming from recordings.\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n  const [avatar, setAvatar] = useState();\n\n  const vote = () => {\n    const totalVotes = hasVoted\n      ? upVotes - 1\n      : upVotes + 1;\n\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  };\n\n  const avatarId = uniqid();\n\n  useEffect(() => {\n    identicon.generate({\n      id: avatarId,\n      size: 150\n    }, (_, buffer) => {\n      // if (err) throw err\n      setAvatar(buffer);\n      console.log('avatar', avatar);\n      return avatar;\n    });\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <img src={avatar} />\n        <audio src={recording} key={recording} controls />\n      </div>\n      {/* <button>Reply</button> */}\n      <button onClick={vote}>\n        {`${upVotes} `}\n        <FontAwesomeIcon\n          icon={[\"far\", \"thumbs-up\"]}\n          color={`${hasVoted ? 'green' : 'red'}`}\n        />\n      </button>\n    </div>\n  )\n};\n\nRecording.propTypes = {\n  recording: PropTypes.string\n};\n\nexport default Recording;\n"]},"metadata":{},"sourceType":"module"}