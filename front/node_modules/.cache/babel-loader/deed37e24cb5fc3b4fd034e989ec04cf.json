{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gmore/Sites/blablabla/src/components/Recording.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Recording = ({\n  recording\n}) => {\n  _s();\n\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n\n  const getIconColor = () => `${hasVoted ? 'green' : 'red'}`;\n\n  const vote = () => {\n    const totalVotes = hasVoted ? upVotes - 1 : upVotes + 1;\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: recording,\n        controls: true\n      }, recording, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: vote,\n      children: [upVotes, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: [\"far\", \"thumbs-up\"],\n        color: getIconColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recording, \"lCrWrv3n5aVgJVC1sCfqrVJei+U=\");\n\n_c = Recording;\nRecording.propTypes = {\n  recording: PropTypes.string\n};\nexport default Recording;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recording\");","map":{"version":3,"sources":["/Users/gmore/Sites/blablabla/src/components/Recording.js"],"names":["React","useState","PropTypes","FontAwesomeIcon","Recording","recording","hasVoted","setHasVoted","upVotes","setUpVotes","getIconColor","vote","totalVotes","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMS,YAAY,GAAG,MAAO,GAAEJ,QAAQ,GAAG,OAAH,GAAa,KAAM,EAAzD;;AACA,QAAMK,IAAI,GAAG,MAAM;AACjB,UAAMC,UAAU,GAAGN,QAAQ,GACvBE,OAAO,GAAG,CADa,GAEvBA,OAAO,GAAG,CAFd;AAIAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,UAAU,CAACG,UAAD,CAAV;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAO,QAAA,GAAG,EAAEP,SAAZ;AAAuC,QAAA,QAAQ;AAA/C,SAA4BA,SAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAEM,IAAjB;AAAA,iBACGH,OADH,eAEE,QAAC,eAAD;AACE,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,WAAR,CADR;AAEE,QAAA,KAAK,EAAEE;AAFT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7BD;;GAAMN,S;;KAAAA,S;AA+BNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,SAAS,EAAEH,SAAS,CAACY;AADD,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Recording = ({ recording }) => {\n  const [hasVoted, setHasVoted] = useState(false);\n  const [upVotes, setUpVotes] = useState(0);\n\n  const getIconColor = () => `${hasVoted ? 'green' : 'red'}`;\n  const vote = () => {\n    const totalVotes = hasVoted\n      ? upVotes - 1\n      : upVotes + 1;\n\n    setHasVoted(!hasVoted);\n    setUpVotes(totalVotes);\n  }\n\n  return (\n    <div>\n      <div>\n        <audio src={recording} key={recording} controls />\n      </div>\n      {/* <button>Reply</button> */}\n      <button onClick={vote}>\n        {upVotes}\n        <FontAwesomeIcon\n          icon={[\"far\", \"thumbs-up\"]}\n          color={getIconColor}\n        />\n      </button>\n    </div>\n  )\n};\n\nRecording.propTypes = {\n  recording: PropTypes.string\n};\n\nexport default Recording;\n"]},"metadata":{},"sourceType":"module"}